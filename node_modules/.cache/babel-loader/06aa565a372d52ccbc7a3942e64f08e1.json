{"ast":null,"code":"var _jsxFileName = \"/Users/princerabadiya/Projects/react-routes-demo/src/pages/AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  ;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(status);\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["/Users/princerabadiya/Projects/react-routes-demo/src/pages/AllQuotes.js"],"names":["React","useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getAllQuotes","AllQuotes","sendRequest","status","data","loadedQuotes","error","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,YAAT,QAA6B,YAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,YAA7B;AAA2CC,IAAAA;AAA3C,MAAqDP,OAAO,CAACC,YAAD,EAAe,IAAf,CAAlE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAAA;;AAED,MAAIG,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,MAAIA,MAAM,KAAK,WAAX,KAA2B,CAACE,YAAD,IAAiBA,YAAY,CAACI,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AAC1E,wBACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAID,sBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjCD;;GAAMJ,S;UACuDF,O;;;KADvDE,S;AAmCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest])\n\n  if (status === 'loading') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  };\n\n  if (error) {\n    return (\n      <div className='centered'>\n        <p>{error}</p>\n      </div>\n    );\n  }\n\n  console.log(status);\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return (\n      <NoQuotesFound />\n    );\n  }\n\n\n\n  return <QuoteList quotes={loadedQuotes}/>\n}\n\nexport default AllQuotes"]},"metadata":{},"sourceType":"module"}