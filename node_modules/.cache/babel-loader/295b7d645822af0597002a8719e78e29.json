{"ast":null,"code":"var _jsxFileName = \"/Users/princerabadiya/Projects/react-routes-demo/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: '1',\n  author: 'Max',\n  text: 'Learning react'\n}, {\n  id: '2',\n  author: 'Max',\n  text: 'Learning react'\n}];\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.id);\n  if (!quote) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Quote Found!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.id}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/quotes/${params.id}/comments`,\n        className: \"btn--flat\",\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/quotes/:id/comments\",\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"rdwgqxZeilGF5b/P9rLFIDXyAnM=\", false, function () {\n  return [useRouteMatch, useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/princerabadiya/Projects/react-routes-demo/src/pages/QuoteDetail.js"],"names":["React","Route","useParams","Link","useRouteMatch","Comments","HighlightedQuote","DUMMY_QUOTES","id","author","text","QuoteDetail","match","params","quote","find"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;AAEA,MAAMC,YAAY,GAAG,CACnB;AAACC,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,KAAlB;AAAyBC,EAAAA,IAAI,EAAE;AAA/B,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAE,GAAL;AAAUC,EAAAA,MAAM,EAAE,KAAlB;AAAyBC,EAAAA,IAAI,EAAE;AAA/B,CAFmB,CAArB;;AAKA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,KAAK,GAAGR,aAAa,EAA3B;AACA,QAAMS,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,KAAK,GAAGP,YAAY,CAACQ,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACN,EAAN,KAAaK,MAAM,CAACL,EAA/C,CAAd;AAEA,MAAG,CAACM,KAAJ,EACE,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACJ,IAA9B;AAAoC,MAAA,MAAM,EAAEI,KAAK,CAACL;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUI,MAAM,CAACL,EAAG,EAAlC;AAAqC,MAAA,KAAK,MAA1C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAUK,MAAM,CAACL,EAAG,WAA/B;AAA2C,QAAA,SAAS,EAAC,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,sBAAZ;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;GAAMG,W;UACUP,a,EACCF,S;;;KAFXS,W;AAqBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote'\n\nconst DUMMY_QUOTES = [\n  {id: '1', author: 'Max', text: 'Learning react'},\n  {id: '2', author: 'Max', text: 'Learning react'},\n];\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.id)\n  \n  if(!quote)\n    return <p>No Quote Found!!</p>\n\n  return (\n    <div>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={`/quotes/${params.id}`} exact>\n        <Link to={`/quotes/${params.id}/comments`} className='btn--flat'>Comments</Link>\n      </Route>\n      <Route path='/quotes/:id/comments'>\n        <Comments />  \n      </Route>\n    </div>\n  )\n}\n\nexport default QuoteDetail"]},"metadata":{},"sourceType":"module"}