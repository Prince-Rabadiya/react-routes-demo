{"ast":null,"code":"var _jsxFileName = \"/Users/princerabadiya/Projects/react-routes-demo/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.id,\n      onAddedComment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"4T2ENR5v0EVLNGk1CMiVdWjSSVc=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/princerabadiya/Projects/react-routes-demo/src/components/comments/Comments.js"],"names":["useState","useParams","classes","NewCommentForm","useHttp","getAllComments","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","error","startAddCommentHandler","addedCommentHandler","comments","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMS,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM;AAAES,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,cAA7B;AAA6CC,IAAAA;AAA7C,MAAuDV,OAAO,CAACC,cAAD,CAApE;;AAEA,QAAMU,sBAAsB,GAAG,MAAM;AACnCP,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAMQ,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAIA,sBACE;AAAS,IAAA,SAAS,EAAEd,OAAO,CAACe,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEQ,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGR,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACS,EAAhC;AAAoC,MAAA,cAAc,EAAEF;AAApD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;GAAMV,Q;UAEWL,S,EAE8CG,O;;;KAJzDE,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { sendRequest, status, data: loadedComments, error } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {\n\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.id} onAddedComment={addedCommentHandler} />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}